#!/bin/env bash

function help() {
    cat <<EOF
Usage: compile_commands.sh  SRC_FILE DST_FILE
Filter the compile commands JSON file so it can be used in VSCode.

SRC_FILE: The compile_commands.json file generated by CMake.
DST_FILE: The destionation of the compile_commands.json file.

Example: If you are using a VSCode task you can define it as:
{
    "label": "Compile commands",
    "type": "shell",
    "command": "\${workspaceFolder}/scheduler/scripts/compile_commands.sh compile_commands.json \${workspaceFolder}/compile_commands.json",
    "problemMatcher": [],
    "options": {
        "cwd": "\${command:cmake.buildDirectory}"
    }
}

Example 2: If you are using WSL2 you can define it as:
{
    "label": "Compile commands",
    "type": "shell",
    "command": "wsl",
    "args": [
        "-d",
        "Ubuntu-20.04",
        "/bin/bash",
        "-c",
        "'$(wslpath ''\${workspaceFolder}/scheduler/scripts/compile_commands.sh'') compile_commands.json $(wslpath ''\${workspaceFolder}/compile_commands.json'')'"
    ],
    "problemMatcher": [],
    "options": {
        "cwd": "${command:cmake.buildDirectory}"
    }
}
EOF
}

SOURCE=$1
DESTINATION=$2

if [[ "$SOURCE" == "-h" || $# != 2 ]]; then
    help
    exit 0
fi

jq 'map(select(.file | contains("build") | not))' ${SOURCE} > ${DESTINATION}
